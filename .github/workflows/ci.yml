name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  license-check:
    name: Check dependenciesâ€™ licenses
    runs-on: ubuntu-latest

    steps:
      - name: Clone the source code
        uses: actions/checkout@v4.2.2

      - name: Set up the Go toolchain
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod

      - name: Check licenses
        run: make license-check

  lint:
    name: Lint
    if: "!contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'docs')"
    runs-on: ubuntu-latest
    needs: [license-check]

    steps:
      - name: Clone the source code
        uses: actions/checkout@v4.2.2

      - name: Set up the Go toolchain
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod

      - name: Verify and download dependencies
        run: |
          go mod verify
          go mod download

      - name: Extract the golangci-lint version
        run: |
          GOLANGCI_LINT_VERSION="$(grep '^GOLANGCI_LINT_VERSION' Makefile | cut -d '=' -f2 | xargs)"
          echo "GOLANGCI_LINT_VERSION=${GOLANGCI_LINT_VERSION}" >> "${GITHUB_ENV}"

      - name: Run the linter
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v${{ env.GOLANGCI_LINT_VERSION }}

  unit-tests:
    name: Unit tests
    if: "!contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'docs')"
    runs-on: ${{ matrix.os }}
    needs: [license-check]

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-24.04-arm
          - ubuntu-22.04-arm
          - windows-2025
          - windows-2022
          - windows-11-arm
          - macos-15
          - macos-14
          - macos-13

    steps:
      - name: Clone the source code
        uses: actions/checkout@v4.2.2

      - name: Install the Go toolchain
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod

      - name: Display the platform information for Go
        run: |
          go env GOOS
          go env GOARCH
          go version

      - name: Verify and download dependencies
        run: |
          go mod verify
          go mod download

      - name: Run the unit tests
        run: make test GOFLAGS="-v"

  race-tests:
    name: Race tests
    if: "!contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'docs')"
    runs-on: ${{ matrix.os }}
    needs: [license-check]

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    steps:
      - name: Clone the source code
        uses: actions/checkout@v4.2.2

      - name: Install the Go toolchain
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod

      - name: Display the platform information for Go
        run: |
          go env GOOS
          go env GOARCH
          go version

      - name: Verify and download dependencies
        run: |
          go mod verify
          go mod download

      - name: Run the tests
        run: make test GOFLAGS="-race -v"
